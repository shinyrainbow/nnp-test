generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       String                    @id @default(uuid())
  clerkId                  String                    @unique
  email                    String?                   @unique
  firstName                String?
  lastName                 String?
  isPaid                   Boolean                   @default(false)
  startDate                DateTime?
  currentExpireDate        DateTime?
  imageUrl                 String?
  plan                     String?

  createdAt                DateTime                  @default(now())
  updatedAt                DateTime                  @updatedAt
  
  role                     Roles                  @default(freeUser)
  postTemplate             PostTemplate[]
  rentalContracts          RentalContract[]
  purchaseAndSaleContracts PurchaseAndSaleContract[]
  appointment              Appointment[]
}


enum Roles {
  admin
  freeUser
  paidUser
}

enum PropertyStatus {
  available
  sold
  rented
  pending
}

enum RoomType {
  Condo
  Townhouse
  SingleHouse
  Apartment
  Other
}

model Project {
  id          String @id @default(uuid())
  projectCode String @unique

  projectNameEn        String
  projectNameTh        String?
  projectDescriptionEn String?
  projectDescriptionTh String?

  projectLocation   String[] @default([]) // ["Phetchaburi", "Makkasan", "Bangkok"]
  projectImageUrl   String[] @default([]) // main building, facilities, etc.
  projectFacilities String[] @default([]) // list of facilities like "swimming pool", "gym", etc.

  addressNumberRoad  String? // 42 Sukhumvit 101/1
  addressSubDistrict String? // Makkasan
  addressDistrict    String?
  addressProvince    String?
  addressZipcode     String?

  completeYear      String? // January 2023
  distanceToStation String[] @default([]) // ["300m to BTS Ekamai", "400m to MRT Thonglor"]
  priceRange        String? // "1.5M - 3.5M THB"
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relation
  properties Property[]
}

model Property {
  id                  String  @id @default(uuid())
  projectPropertyCode String? // RHB-1 (project-number) for agent

  // status
  status            PropertyStatus? @default(pending)
  whenAvailable     String?
  isAcceptShortTerm String?

  // details
  addressNumber String? // 42/188
  bedRoom       String?
  bathRoom      String?
  roomSize      String? // in sqm
  houseSize    String?
  floor         String?
  building      String?
  propertyType      RoomType? @default(Condo)
  isPetFriendly String?
  carPark       String?
  imageUrls     String[]  @default([])
  amenities String[]  @default([])

  // price
  rentalRate String?
  sellPrice  String?

  // contact
  phone  String?
  lineId String?
  fbUser String? // name and lasname 

  isOwner  String?
  linkPost String? //link of the post 

  // messages
  note            String? // for some more details
  originalMessage String?
  messageToPost   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  postId String?

  // Relation
  projectCode String
  project     Project @relation(fields: [projectCode], references: [projectCode])
}

model PostTemplate {
  id       String @id @default(uuid())
  template String

  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model RentalContract {
  id String @id @default(uuid())

  language      String
  contractPlace String?
  contractDate  String?

  ownerName    String?
  ownerAge     String?
  ownerId      String?
  ownerAddress String?
  ownerPhone   String?

  tenantName    String?
  tenantAge     String?
  tenantId      String?
  tenantAddress String?
  tenantPhone   String?

  projectName    String?
  projectFloor   String?
  projectAddress String?

  rentalPeriod String?
  advance      String?
  deposit      String?
  tax          String?
  commonFee    String?
  bills        String?

  dateReceive String?
  rentalRate  String?
  startDate   String?

  subDistrict String?
  district    String?
  province    String?
  rentDue     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model PurchaseAndSaleContract {
  id String @id @default(uuid())

  language      String
  contractPlace String?
  contractDate  String?

  sellerName    String?
  sellerAge     String?
  sellerId      String?
  sellerAddress String?
  sellerPhone   String?

  buyerName    String?
  buyerAge     String?
  buyerId      String?
  buyerAddress String?
  buyerPhone   String?

  projectName        String?
  projectFloor       String?
  projectAddressNo   String?
  projectAddress     String?
  amenities          String?
  chanot             String?
  size               String?
  deposit            String?
  depositText        String?
  sellPrice          String?
  priceText          String?
  remainingPrice     String?
  remainingPriceText String?

  subDistrict String?
  district    String?
  province    String?

  speTax   String?
  tax      String?
  mortgage String?
  transfer String?
  stamp    String?

  note1 String?
  note2 String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id])
}

model Appointment {
  id             String   @id @default(cuid())
  appointmentType String
  clientName      String
  clientContact     String
  date            DateTime
  time            String
  notes           String?
  createdAt       DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])
}